name: Release Packages

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  FEED_NAME: mihomo
  PACKAGE_NAME: luci-app-mihomo
  NO_REFRESH_CHECK: true

jobs:
  get-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.ref_name }}

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep 'PKG_VERSION:=' ./${{ env.PACKAGE_NAME }}/Makefile | awk -F '=' '{print $2}')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "New Version: ${VERSION}"

  release:
    name: Build ${{ matrix.arch }}-${{ matrix.branch }}
    needs: get-version
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        arch:
          # ARM architectures
          - arm_cortex-a5_vfpv4
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_vfpv3-d16
          - arm_cortex-a9_neon
          - arm_cortex-a15_neon-vfpv4
          # ARM64 architectures
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - aarch64_cortex-a76
          - aarch64_generic
          # MIPS architectures
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_24kc_24kf
          - mipsel_74kc
          - mipsel_mips32
          - mips64_octeonplus
          # x86 architectures
          - i386_pentium4
          - x86_64
        branch:
          - openwrt-23.05
          - openwrt-24.10
          - SNAPSHOT
        exclude:
          - arch: aarch64_cortex-a76
            branch: openwrt-23.05

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build package
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.branch }}
          FEEDNAME: ${{ env.FEED_NAME }}
          PACKAGES: ${{ env.PACKAGE_NAME }}
          NO_REFRESH_CHECK: ${{ env.NO_REFRESH_CHECK }}

      - name: Prepare artifacts
        id: prepare
        run: |
          # Create distribution archives
          mkdir -p "public/${{ matrix.branch }}/${{ matrix.arch }}"
          cp -r "bin/packages/${{ matrix.arch }}/${{ env.FEED_NAME }}" "public/${{ matrix.branch }}/${{ matrix.arch }}"
          
          # Create package archive
          tar -czf "mihomo_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz" \
              -C "bin/packages/${{ matrix.arch }}/${{ env.FEED_NAME }}" .
          
          # Create feed archive
          tar -czf "feed_mihomo_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz" \
              "public/${{ matrix.branch }}/${{ matrix.arch }}"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ needs.get-version.outputs.version }}"
          files: mihomo_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz
          fail_on_unmatched_files: false
          generate_release_notes: true

      - name: Upload feed artifact
        uses: actions/upload-artifact@v4
        with:
          name: feed_mihomo_${{ matrix.arch }}-${{ matrix.branch }}
          path: feed_mihomo_${{ matrix.arch }}-${{ matrix.branch }}.tar.gz

  feed:
    needs: release
    name: feed
    runs-on: ubuntu-latest

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          pattern: feed_mihomo_*
          merge-multiple: true
      
      - name: Uncompress
        run: |
          for file in feed_mihomo_*.tar.gz; do tar -x -z -f "$file"; done

      - name: Feed
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          commit_message: Update Feed
